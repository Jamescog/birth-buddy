basePath: /api/v1
definitions:
  users.UserDetailOutDTO:
    properties:
      birthday_count:
        type: integer
      full_name:
        type: string
      is_premium:
        type: boolean
      telegram_id:
        type: integer
      username:
        type: string
    type: object
  users.UserRegistrationRequestDTO:
    properties:
      full_name:
        type: string
      telegram_id:
        type: integer
      username:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for Birth Buddy Birthday reminder application built with Golang
    and Ent ORM
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Birth Buddy API
  version: "1.0"
paths:
  /users/:
    get:
      description: Returns all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/users.UserDetailOutDTO'
            type: array
        "500":
          description: Internal Server Error
      summary: Return all users in the system
      tags:
      - User
  /users/{telegram_id}:
    get:
      description: Return single user by telegram_id
      parameters:
      - description: User Telegram ID
        in: path
        name: telegram_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.UserDetailOutDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Returns single user
      tags:
      - User
  /users/register:
    post:
      consumes:
      - application/json
      description: Create  a new telegram user in the system
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.UserRegistrationRequestDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
      summary: Create a user
      tags:
      - User
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
