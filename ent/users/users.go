// Code generated by ent, DO NOT EDIT.

package users

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the users type in the database.
	Label = "users"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTelegramID holds the string denoting the telegram_id field in the database.
	FieldTelegramID = "telegram_id"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldFullName holds the string denoting the full_name field in the database.
	FieldFullName = "full_name"
	// FieldIsPremium holds the string denoting the is_premium field in the database.
	FieldIsPremium = "is_premium"
	// FieldBirthdayCount holds the string denoting the birthday_count field in the database.
	FieldBirthdayCount = "birthday_count"
	// Table holds the table name of the users in the database.
	Table = "users"
)

// Columns holds all SQL columns for users fields.
var Columns = []string{
	FieldID,
	FieldTelegramID,
	FieldUsername,
	FieldFullName,
	FieldIsPremium,
	FieldBirthdayCount,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TelegramIDValidator is a validator for the "telegram_id" field. It is called by the builders before save.
	TelegramIDValidator func(int) error
	// DefaultIsPremium holds the default value on creation for the "is_premium" field.
	DefaultIsPremium bool
	// DefaultBirthdayCount holds the default value on creation for the "birthday_count" field.
	DefaultBirthdayCount int
)

// OrderOption defines the ordering options for the Users queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByTelegramID orders the results by the telegram_id field.
func ByTelegramID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTelegramID, opts...).ToFunc()
}

// ByUsername orders the results by the username field.
func ByUsername(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUsername, opts...).ToFunc()
}

// ByFullName orders the results by the full_name field.
func ByFullName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFullName, opts...).ToFunc()
}

// ByIsPremium orders the results by the is_premium field.
func ByIsPremium(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsPremium, opts...).ToFunc()
}

// ByBirthdayCount orders the results by the birthday_count field.
func ByBirthdayCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBirthdayCount, opts...).ToFunc()
}
